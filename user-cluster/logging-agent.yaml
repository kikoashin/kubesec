# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: Namespace
metadata:
  name: cos-auditd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: cos-auditd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: cos-auditd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cos-auditd-logging
  namespace: cos-auditd
  annotations:
    kubernetes.io/description: 'DaemonSet that enables Linux auditd logging on COS nodes.'
spec:
  selector:
    matchLabels:
      name: cos-auditd-logging
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: cos-auditd-logging
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      hostNetwork: true
      hostPID: true
      nodeSelector:
        cloud.google.com/gke-os-distribution: cos
      volumes:
      - hostPath:
          path: /
        name: host
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /usr/lib64
        name: libsystemddir
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          defaultMode: 420
          name: fluentd-gcp-config-cos-auditd
        name: config-volume
      initContainers:
      - name: cos-auditd-setup
        image: ubuntu
        #command: ["chroot", "/host", "systemctl", "start", "cloud-audit-setup"]
        command: ["chroot", "/host", "/bin/sh"]
        args: ["-c", "auditctl -D; auditctl -a never,exclude -Fmsgtype!=AVC"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: host
          mountPath: /host
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
      containers:
      - name: fluentd-es
        image: marketplace.gcr.io/google/elastic-gke-logging/fluentd:6.8
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
        ports:
        - containerPort: 24231
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-gcp-config-cos-auditd
  namespace: cos-auditd
data:

  system.input.conf: |-
    <source>
      @type systemd
      filters [{ "SYSLOG_IDENTIFIER": "audit" }]
      pos_file /var/log/gcp-journald-audit.pos
      read_from_head true
      tag linux-auditd
    </source>

  output.conf: |-
    <filter kubeproxy>
      @type record_transformer
      enable_ruby
      <record>
        hostname ${ENV["HOSTNAME"]}
      </record>
    </filter>

    <filter **>
      @type prometheus
      <metric>
        type counter
        name fluentd_input_status_num_records_total
        desc Total number of log entries generated by either application containers or system components
      </metric>
    </filter>

    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <match **>
      @id elasticsearch
      @type elasticsearch
      @log_level info
      include_tag_key true
      host 34.147.113.51
      port 9200
      user elastic
      password d25mkqgvj4z4b9227qwkncc2
      scheme http
      logstash_format true
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>
---